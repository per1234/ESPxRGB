/*
  ESPxRGB Library Gamma Functions

  v0.1.0

  Copyright 2019 technosf [https://github.com/technosf]

  Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3.0 or greater (the "License"); 
  you may not use this file except in compliance with the License. 
  You may obtain a copy of the License at

  https://www.gnu.org/licenses/lgpl-3.0.en.html
  Unless required by applicable law or agreed to in writing, 
  software distributed under the License is distributed on an "AS IS" BASIS, 
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
  See the License for the specific language governing permissions and limitations under the License.
*/

/*
 * ESPxRGB Library Gamma functions
 * 
 *  For driving RGB LEDs with RGB data. Reduces RGB values down to a range perceivable by
 */

#include "options.h"


#ifndef __GAMMA__
#warning "Gamma functions are not included."
#else  

// Inputsfor rgb
#define p_R a2
#define p_G a3
#define p_B a4
#define p_W a5


// Inputsfor rgb
#define pntr a2
#define count a3

// Working storage
#define gammatbl  a6
#define val a7
#define temp a8


// -------------- Macros --------------


/*
 * Update the pointer with the gamma lookup from the table
 */
.macro  m_gamma8  pntr:req, gamma:req
  l8ui    temp, \pntr,  0               // load the raw color value
  add.n   temp, temp,   \gamma          // Calculate the corrected gamma value adress                
  l8ui    temp, temp,   0               // Load the gamma value into temp from address in temp
  s8i     temp, \pntr,  0               // Store the corrected color value
.endm  


// --------------- Externals ---------------

  .text
  
  .global xgamma8      
  .global xgammaarray8
  .global xrgbgamma8    
  .global xrgbwgamma8   

  
// --------------- Code ---------------

/*            
 *  Gamma Correction       
 *  
 *  xgamma8
 *  
 */
  .type   xgamma8,@function
  .align 4
xgamma8:
  .frame  a1,  32
  entry   a1,  32     


_gamma8:  
  movi    a3, _gamma8_table        // Gamma table goes in a3
  add.n   a2, a2, a3                // Calculate the gamma address
  l8ui    a2, a2,  0                // Load into a2 the value at a2
  retw.n                            // Return from the windowed call


/*            
 *  RGB Gamma Correction 
 *  
 *  xrgbgamma8
 *  
 */
  .type   xrgbgamma8,@function
  .align 4
xrgbgamma8:
  .frame  a1,  32
  entry   a1,  32     


_rgbgamma8:

  movi    gammatbl, _gamma8_table       // Lookup table address

  
_calc_rgb_gamma8:  

  m_gamma8  p_R,  gammatbl               // Red
  m_gamma8  p_G,  gammatbl               // Green
  m_gamma8  p_B,  gammatbl               // Blue
  retw.n   

  
/*            
 *  RGBW Gamma Correction (White, then RGB)        
 *  
 *  xrgbwgamma8
 *  
 */
  .type   xrgbwgamma8,@function
  .align 4
xrgbwgamma8:
  .frame  a1,  32
  entry   a1,  32     


_rgbwgamma8:
  
  movi    gammatbl, _gamma8_table
  
_calc_w_gamma8:  

  m_gamma8  p_W,  gammatbl      // White
  j _calc_rgb_gamma8            // Calculate the RGB
     


/*            
 *  RGB Gamma Correction 
 *  
 *  xgammaarray8
 *  
 *  Gamma correct values in an 8bit value array
 */
  .type   xgammaarray8,@function
  .align 4
xgammaarray8:
  .frame  a1,  32
  entry   a1,  32     

_gammaarray8:  

  beqz    count, _loopexit
  movi    gammatbl, _gamma8_table

_calc_array_gamma8:

  loop count,   _loopexit    
  m_gamma8  pntr, gammatbl      // Update pntr addr with gamma tble lookup   
  addi.n    pntr, pntr, 0x01             // Increment pntr   
  
_loopexit:

  retw.n  

/*            
 *  RGB Luma Correction 
 *  
 *  xrgbluma8
 *  
 *  Gamma correct values in an 8bit value array
 */
  .type   xrgbluma8,@function
  .align 4
xrgbluma8:
  .frame  a1,  32
  entry   a1,  32     

_rgbluma8:  

  l8ui    val, p_R,  0                 // Halve Red intensity
  srli    val, val, 1
  s8i     val, p_R,  0 

  l8ui    val, p_G,  0                 // Quarter Green intensity
  srli    val, val, 2
  s8i     val, p_G,  0 

  l8ui    val, p_B,  0                 // Boost Blue intensity by an eigth
  movi    temp, 0xEE
  bge     val,  temp, _lumaexit
  srli    temp, val, 5
  add.n   val, val, temp
  s8i     val, p_B,  0 
  
_lumaexit:

  retw.n  


// --------------- Data ---------------

    .data
    
/* 
 *  Gamma correction table generated by the sketch 
 *  
 *  To change the correction factor, regen the table 
 *  replace the data below
 */  
_gamma8_table:  

.word 0x00000000, 0x00000000, 0x00000000, 0x00000000
.word 0x00000000, 0x00000000, 0x00000000, 0x01010101
.word 0x01010101, 0x01010101, 0x02020201, 0x02020202
.word 0x03030202, 0x03030303, 0x04040404, 0x05050504
.word 0x06060605, 0x07070706, 0x08080807, 0x0a090909
.word 0x0b0b0a0a, 0x0c0c0c0b, 0x0e0e0d0d, 0x100f0f0f
.word 0x12111110, 0x14131312, 0x16161515, 0x19181717
.word 0x1b1b1a19, 0x1e1d1d1c, 0x21201f1f, 0x24232222
.word 0x27262625, 0x2b2a2928, 0x2e2d2c2c, 0x3231302f
.word 0x36353433, 0x3a393837, 0x3f3e3d3b, 0x43424140
.word 0x48474645, 0x4d4c4b4a, 0x5351504f, 0x58575554
.word 0x5e5d5b5a, 0x6462615f, 0x6a696766, 0x716f6d6c
.word 0x77767472, 0x7e7d7b79, 0x86848280, 0x8d8b8988
.word 0x9593918f, 0x9d9b9997, 0xa5a3a19f, 0xaeacaaa7
.word 0xb7b5b2b0, 0xc0bebbb9, 0xc9c7c5c2, 0xd3d1cecc
.word 0xdddbd8d6, 0xe8e5e2e0, 0xf2f0edea, 0xfdfaf8f5
  
#endif      
